<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.fnsco.order.service.dao.master.AppUserDao">
	<resultMap id="BaseResultMap" type="net.fnsco.order.service.domain.AppUser">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="user_name" jdbcType="VARCHAR" property="userName" />
		<result column="mobile" jdbcType="VARCHAR" property="mobile" />
		<result column="password" jdbcType="VARCHAR" property="password" />
		<result column="real_name" jdbcType="VARCHAR" property="realName" />
		<result column="device_id" jdbcType="VARCHAR" property="deviceId" />
		<result column="ges_state" jdbcType="INTEGER" property="gesState" />
		<result column="ges_password" jdbcType="VARCHAR" property="gesPassword" />
		<result column="ges_trail" jdbcType="INTEGER" property="gesTrail" />
		<result column="pay_password" jdbcType="VARCHAR" property="payPassword" />
		<result column="device_type" jdbcType="INTEGER" property="deviceType" />
		<result column="device_token" jdbcType="VARCHAR" property="deviceToken" />
		<result column="password_error_num" jdbcType="INTEGER"
			property="passwordErrorNum" />
		<result column="password_error_date" jdbcType="TIMESTAMP"
			property="passwordErrorDate" />
		<result column="remark" jdbcType="VARCHAR" property="remark" />
		<result column="reg_time" jdbcType="TIMESTAMP" property="regTime" />
		<result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime" />
		<result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
		<result column="state" jdbcType="INTEGER" property="state" />
		<result column="forced_login_out" jdbcType="INTEGER" property="forcedLoginOut" />
		<result column="sex" jdbcType="INTEGER" property="sex" />
		<result column="head_image_path" jdbcType="VARCHAR" property="headImagePath" />
		<result column="invite_status" jdbcType="INTEGER" property="inviteStatus" />
		<result column="invite_entity_innner_code" jdbcType="VARCHAR" property="inviteEntityInnnerCode" />
		
		<result column="id_card_number" jdbcType="VARCHAR" property="idCardNumber" />
	</resultMap>
	<!-- WEB页面用 -->
	<resultMap id="PageResultMap" type="net.fnsco.order.api.dto.AppUserManageDTO" >
	  <result column="user_name" property="userName" jdbcType="VARCHAR" />
	  <result column="mobile" property="mobile" jdbcType="VARCHAR" />
	  <result column="reg_time" property="regTime" jdbcType="TIMESTAMP"/>
	  <result column="mer_names" property="merNames" jdbcType="VARCHAR"/>
	  <result column="last_login_time" property="lastLoginTime" jdbcType="TIMESTAMP"/>
	</resultMap>
	<!-- 商户角色结果集 -->
  <resultMap  id="RELResultMap" type="net.fnsco.order.api.dto.QueryBandDTO">
     <result column="id" property="id" jdbcType="INTEGER" />
     <result column="role_id" property="roleId" jdbcType="VARCHAR" />
     <result column="inner_code" property="innerCode" jdbcType="VARCHAR" />
     <result column="app_user_id" property="appUserId" jdbcType="INTEGER" />
  </resultMap>
  <!-- innerCode结果集 -->
  <resultMap  id="RELInnerCodeResultMap" type="net.fnsco.order.api.dto.QueryBandDTO">
     <result column="inner_code" property="innerCode" jdbcType="VARCHAR" />
  </resultMap>
	<sql id="Base_Column_List">
		id, user_name, mobile, password, real_name, device_id, ges_state,
		ges_password, ges_trail,
		pay_password, device_type, device_token, password_error_num, password_error_date,
		remark, reg_time, last_login_time, modify_time, state,forced_login_out,sex,head_image_path,invite_entity_innner_code,invite_status
	</sql>
	<!-- 根据手机号更新用户 密码 -->
	<update id="updatePasswordByPhone" parameterType="java.lang.String">
		update u_app_user set password = #{password,jdbcType=VARCHAR} where mobile =
		#{mobile,jdbcType=VARCHAR}
	</update>
	<!-- 根据手机号更新用户支付密码 -->
	<update id="updatePayPasswordByPhone" parameterType="java.lang.String">
		update u_app_user set pay_password = #{password,jdbcType=VARCHAR} where mobile =
		#{mobile,jdbcType=VARCHAR}
	</update>
	<!-- 根据手机号查询用户实体 -->
	<select id="selectAppUserByMobile" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from u_app_user
		where mobile = #{mobile,jdbcType=VARCHAR} LIMIT 1
	</select>
    <!-- 根据手机号和用户状态查询用户实体 -->
	<select id="selectAppUserByMobileAndState" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from u_app_user
		where mobile = #{mobile,jdbcType=VARCHAR} and state = #{state,jdbcType=INTEGER} LIMIT 1
	</select>
	<!-- 根据id查询用户实体 -->
	<select id="selectAppUserById" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from u_app_user
		where id = #{id,jdbcType=INTEGER}
	</select>
	<!-- 新增注册记录 -->
	<insert id="insertSelective" parameterType="net.fnsco.order.service.domain.AppUser">
		insert into u_app_user(id, user_name, mobile, password, real_name,
		device_id, ges_state, ges_password, ges_trail,
		pay_password, device_type, device_token, password_error_num, password_error_date,
		remark, reg_time, last_login_time, modify_time, state,forced_login_out,head_image_path,invite_entity_innner_code,invite_status)
		values (#{id,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR},
		#{mobile,jdbcType=VARCHAR},#{password,jdbcType=VARCHAR},
		#{realName,jdbcType=VARCHAR}, #{deviceId,jdbcType=VARCHAR},
		#{gesState,jdbcType=INTEGER},
		#{gesPassword,jdbcType=VARCHAR}, #{gesTrail,jdbcType=INTEGER}, #{payPassword,jdbcType=VARCHAR},
		#{deviceType,jdbcType=INTEGER}, #{deviceToken,jdbcType=VARCHAR},
		#{passwordErrorNum,jdbcType=INTEGER},
		#{passwordErrorDate,jdbcType=TIMESTAMP},
		#{remark,jdbcType=VARCHAR}, #{regTime,jdbcType=TIMESTAMP}, #{lastLoginTime,jdbcType=TIMESTAMP},
		#{modifyTime,jdbcType=TIMESTAMP},#{state,jdbcType=INTEGER},#{forcedLoginOut,jdbcType=INTEGER},
		#{headImagePath,jdbcType=VARCHAR},
		#{inviteEntityInnnerCode,jdbcType=VARCHAR},#{inviteStatus,jdbcType=INTEGER})
	</insert>
	<!-- 修改用户信息 -->
	<update id="updateByPrimaryKeySelective" parameterType="net.fnsco.order.service.domain.AppUser">
		update u_app_user
		<set>
			<if test="mobile != null">
				mobile = #{mobile,jdbcType=VARCHAR},
			</if>
			<if test="userName != null">
				user_name = #{userName,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="idCardNumber != null">
				id_card_number = #{idCardNumber,jdbcType=VARCHAR},
			</if>
			<if test="realName != null">
				real_name = #{realName,jdbcType=VARCHAR},
			</if>
			<if test="deviceId != null">
				device_id = #{deviceId,jdbcType=VARCHAR},
			</if>
			<if test="gesState != null">
				ges_state = #{gesState,jdbcType=INTEGER},
			</if>
			<if test="gesPassword != null">
				ges_password = #{gesPassword,jdbcType=VARCHAR},
			</if>
			<if test="gesTrail != null">
				ges_trail = #{gesTrail,jdbcType=INTEGER},
			</if>
			<if test="payPassword != null">
				pay_password = #{payPassword,jdbcType=VARCHAR},
			</if>
			<if test="deviceType != null">
				device_type = #{deviceType,jdbcType=INTEGER},
			</if>
			<if test="deviceToken != null">
				device_token = #{deviceToken,jdbcType=VARCHAR},
			</if>
			<if test="passwordErrorNum != null">
				password_error_num = #{passwordErrorNum,jdbcType=INTEGER},
			</if>
			<if test="passwordErrorDate != null">
				password_error_date = #{passwordErrorDate,jdbcType=TIMESTAMP},
			</if>
			<if test="remark != null">
				remark = #{remark,jdbcType=VARCHAR},
			</if>
			<if test="regTime != null">
				reg_time = #{regTime,jdbcType=TIMESTAMP},
			</if>
			<if test="lastLoginTime != null">
				last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
			</if>
			<if test="modifyTime != null">
				modify_time = #{modifyTime,jdbcType=TIMESTAMP},
			</if>
			<if test="state != null">
				state = #{state,jdbcType=INTEGER},
			</if>
			<if test="forcedLoginOut != null">
				forced_login_out = #{forcedLoginOut,jdbcType=INTEGER},
			</if>
			<if test="sex != null">
				sex = #{sex,jdbcType=INTEGER},
			</if>
			<if test="headImagePath != null">
				head_image_path = #{headImagePath,jdbcType=VARCHAR},
			</if>
			<if test="inviteStatus != null">
				invite_status = #{inviteStatus,jdbcType=INTEGER},
			</if>
			<if test="inviteEntityInnnerCode != null">
				invite_entity_innner_code = #{inviteEntityInnnerCode,jdbcType=VARCHAR},
			</if>
			
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<!-- 根据innerCode查询 -->
	<select id="selectByInnerCode" parameterType="java.lang.String" resultMap="BaseResultMap">
	  SELECT
			MU.id,MU.device_token,MU.mobile,MU.device_type
		FROM
			(
				SELECT DISTINCT
					(app_user_id)
				FROM
					u_app_user_merchant
				WHERE
					inner_code = #{innerCode}
			) RE
		LEFT JOIN u_app_user MU ON RE.app_user_id = MU.id
	</select>
	<!-- 条件分页查询 -->
	<select id="queryPageList" parameterType="net.fnsco.core.base.PageDTO" resultMap="PageResultMap">
	   SELECT
		TA.mobile,
		TA.reg_time,
		TA.user_name,
		TA.last_login_time,
		concat(
					GROUP_CONCAT(TA.mer_name),
					"、"
				) AS 'mer_names'
		FROM
			(
				SELECT
					MR.mobile,
					MC.mer_name,
					MR.reg_time,
					MR.user_name,
					MR.last_login_time
				FROM
					(
						SELECT
							MU.*, RE.inner_code
						FROM
							 u_app_user MU
						LEFT JOIN u_app_user_merchant RE ON MU.id = RE.app_user_id
					) MR
				LEFT JOIN  m_merchant_core MC ON MR.inner_code = MC.inner_code
			) TA
			<where>
							    <if test="condition.mobile != null and condition.mobile !=''">
									AND TA.mobile LIKE CONCAT('%',#{condition.mobile},'%')
								</if>
								 <if test="condition.merNames != null and condition.merNames != ''" >
				                     AND TA.mer_name LIKE CONCAT('%', #{condition.merNames}, '%')
				      			</if>
			</where>
		GROUP BY
			TA.last_login_time,TA.reg_time,TA.mobile,TA.user_name
		ORDER BY reg_time DESC	
	    limit #{startRow},#{perPageSize}		
	</select>
	<!-- 条件查询总数 -->
	<select id="queryTotalByCondition" parameterType="net.fnsco.order.api.dto.AppUserManageDTO" resultType="java.lang.Integer">
	 SELECT COUNT(*) FROM (
	  SELECT
		TA.mobile
		FROM
			(
				SELECT
					MR.mobile,
					MC.mer_name,
					MR.reg_time,
					MR.user_name,
					MR.last_login_time
				FROM
					(
						SELECT
							MU.*, RE.inner_code
						FROM
							 u_app_user
							  
							MU
						LEFT JOIN u_app_user_merchant RE ON MU.id = RE.app_user_id
					) MR
				LEFT JOIN 
				   m_merchant_core 
				 MC ON MR.inner_code = MC.inner_code
			) TA
			<where>
							    <if test="mobile != null and mobile !=''">
									AND TA.mobile LIKE CONCAT('%', #{mobile}, '%') 
								</if>
								<if test="merNames != null and merNames != ''" >
				        			AND TA.mer_name LIKE CONCAT('%', #{merNames}, '%') 
				      			</if>
			</where>
		GROUP BY
			TA.last_login_time,TA.mobile,TA.reg_time,TA.user_name
		) TAB
	</select>
	  <!-- 根据手机号查询店铺绑定情况 -->
  <select id="selectBandPeopleByMobile" parameterType="java.lang.String" resultMap="RELResultMap">
  	SELECT
			REL.role_id,REL.inner_code,REL.app_user_id,REL.id
		FROM
			u_app_user_merchant REL
		 JOIN (
			SELECT
				*
			FROM
				u_app_user
			WHERE
				mobile = #{mobile,jdbcType=VARCHAR}
		) User ON REL.app_user_id = User.id
  </select>
  <!-- 查询推送用户信息 -->
  <select id="queryAllPushUser" resultMap="BaseResultMap">
    select
		<include refid="Base_Column_List" />
		from u_app_user
		where state = 1 and device_token &lt;&gt; '' and device_token is not null
  </select>
  <update id="updateDeviceToken">
		update u_app_user set device_token = #{deviceToken,jdbcType=VARCHAR} ,device_type=#{deviceType,jdbcType=INTEGER}, device_id=#{deviceId,jdbcType=VARCHAR} where mobile =
		#{mobile,jdbcType=VARCHAR}
  </update>
   <update id="updateDeviceTokenById">
		update u_app_user set device_token = #{deviceToken,jdbcType=VARCHAR} ,device_type=#{deviceType,jdbcType=INTEGER}, device_id=#{deviceId,jdbcType=VARCHAR} where id = #{id,jdbcType=INTEGER}
  </update>
	<!-- 根据deviceToken查找到用户-->
	<select id="queryBydeviceToken" resultMap="BaseResultMap">
    select
		<include refid="Base_Column_List" />
		from u_app_user
		where state = 1 and device_token = #{deviceToken,jdbcType=VARCHAR}
  </select>
  <update id="updateByPrimaryKey" parameterType="net.fnsco.order.service.domain.AppUser">
  	  	update u_app_user set
  	  	user_name=#{userName,jdbcType=VARCHAR},
		mobile=#{mobile,jdbcType=VARCHAR},password=#{password,jdbcType=VARCHAR},
		real_name=#{realName,jdbcType=VARCHAR}, device_id=#{deviceId,jdbcType=VARCHAR},
		ges_state=#{gesState,jdbcType=INTEGER},
		ges_password=#{gesPassword,jdbcType=VARCHAR}, ges_trail=#{gesTrail,jdbcType=INTEGER}, pay_password=#{payPassword,jdbcType=VARCHAR},
		device_type=#{deviceType,jdbcType=INTEGER}, device_token=#{deviceToken,jdbcType=VARCHAR},
		password_error_num=#{passwordErrorNum,jdbcType=INTEGER},
		password_error_date=#{passwordErrorDate,jdbcType=TIMESTAMP},
		remark=#{remark,jdbcType=VARCHAR}, reg_time=#{regTime,jdbcType=TIMESTAMP}, last_login_time=#{lastLoginTime,jdbcType=TIMESTAMP},
		modify_time=#{modifyTime,jdbcType=TIMESTAMP},state=#{state,jdbcType=INTEGER},forced_login_out=#{forcedLoginOut,jdbcType=INTEGER}
  	  	where id = #{id,jdbcType=INTEGER}
  </update>
  <!-- 查询某种角色的所有用户信息 -->
  <select id="selectAllInlineByRoleId" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
		<include refid="Base_Column_List" />
		from u_app_user
		WHERE state = 1 and device_token &lt;&gt; '' and device_token is not null and id IN ( SELECT app_user_id FROM u_app_user_merchant WHERE role_id = #{roleId})
  </select>
  <!-- 查询手机号的关联信息 -->
 <select id="selectInnercode" parameterType="java.lang.String" resultMap="RELInnerCodeResultMap">
  	SELECT inner_code FROM m_merchant_core WHERE legal_person_mobile=#{mobile,jdbcType=VARCHAR}  UNION SELECT inner_code FROM m_merchant_contact  WHERE contact_mobile=#{mobile,jdbcType=VARCHAR}
  </select>
  <!-- 查询所有有效帐号 -->
  <select id="selectAllValid" resultMap="BaseResultMap">
      select
		<include refid="Base_Column_List" />
		from u_app_user
		WHERE state = 1 
  </select>
  <!-- 查询所有被邀请的用户 -->
  <select id="selectAllInviteAppUser" resultMap="BaseResultMap">
      select
		<include refid="Base_Column_List" />
		from u_app_user
		WHERE state = 1 and invite_status='0'
  </select>
  <!-- 查询所有用户 -->
  <select id="selectAllNewUserFormZFT" resultMap="BaseResultMap">
     select
		<include refid="Base_Column_List" />
		from u_app_user  where remark = '-1200002'
  </select>
  <!-- 判断app用户是否已身份认证 -->
	<select id="selectIdAuth" parameterType="java.lang.Integer" resultMap="BaseResultMap" >
		SELECT id_card_number FROM u_app_user WHERE id = #{id,jdbcType=INTEGER}
	</select>
	<!-- 条件分页查询 -->
	<select id="queryPageListE789" parameterType="net.fnsco.core.base.PageDTO" resultType="net.fnsco.order.api.dto.AppUserMerchantEntityDTO">
	   SELECT
			UA.*,
			MME.merc_name AS merNames
		FROM
			(
				SELECT
					UAP.id,
					UAP.user_name AS userName,
					UAP.reg_time AS regTime,
					UAP.mobile,
					UAP.id_card_number AS idCardNumber,
					AUM.entity_inner_code
				FROM
					u_app_user UAP
				LEFT JOIN u_app_user_merchant_entity AUM ON UAP.id = AUM.app_user_id
			) UA
		LEFT JOIN m_merchant_entity MME ON UA.entity_inner_code = MME.entity_inner_code
		<where>
			    <if test="condition.mobile != null and condition.mobile !=''">
					AND mobile LIKE CONCAT('%', #{condition.mobile}, '%') 
				</if>
				<if test="condition.merNames != null and condition.merNames != ''" >
        			AND MME.merc_name LIKE CONCAT('%', #{condition.merNames}, '%') 
      			</if>
      			<if test="condition.userName != null and condition.userName != ''" >
        			AND userName LIKE CONCAT('%', #{condition.userName}, '%') 
      			</if>
      			<if test="condition.idCardNumber != null and condition.idCardNumber != ''" >
        			AND idCardNumber LIKE CONCAT('%', #{condition.idCardNumber}, '%') 
      			</if>
		</where>
		ORDER BY regTime DESC	
	    limit #{startRow},#{perPageSize}		
	</select>
	<!-- 条件查询总数 -->
	<select id="queryTotalByConditionE789" parameterType="net.fnsco.order.api.dto.AppUserMerchantEntityDTO" resultType="java.lang.Integer">
	 SELECT
			count(*)
		FROM
			(
				SELECT
					UAP.id,
					UAP.user_name AS userName,
					UAP.reg_time AS regTime,
					UAP.mobile,
					UAP.id_card_number AS idCardNumber,
					AUM.entity_inner_code
				FROM
					u_app_user UAP
				LEFT JOIN u_app_user_merchant_entity AUM ON UAP.id = AUM.app_user_id
			) UA
		LEFT JOIN m_merchant_entity MME ON UA.entity_inner_code = MME.entity_inner_code
		<where>
			    <if test="mobile != null and mobile !=''">
					AND mobile LIKE CONCAT('%', #{mobile}, '%') 
				</if>
				<if test="merNames != null and merNames != ''" >
        			AND MME.merc_name LIKE CONCAT('%', #{merNames}, '%') 
      			</if>
      			<if test="userName != null and userName != ''" >
        			AND userName LIKE CONCAT('%', #{userName}, '%') 
      			</if>
      			<if test="idCardNumber != null and idCardNumber != ''" >
        			AND idCardNumber LIKE CONCAT('%', #{idCardNumber}, '%') 
      			</if>
		</where>
	</select>
</mapper>